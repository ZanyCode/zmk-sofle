#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150


#define KEYS_L 0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 52 53 54 55 56 57
#define KEYS_R 7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 58 59 60 61 62 63 64 65 66 67 68 69 70

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    flavor = "balanced";              // Prefer taps for fast typing
};

/ {
    ouml: ouml {
        compatible = "zmk,behavior-mod-morph";
        label = "OUML";
        bindings = <&oumllower>, <&oumlupper>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    auml: auml {
        compatible = "zmk,behavior-mod-morph";
        label = "AUML";
        bindings = <&aumllower>, <&aumlupper>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    uuml: uuml {
        compatible = "zmk,behavior-mod-morph";
        label = "UUML";
        bindings = <&uumllower>, <&uumlupper>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R>;

            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L>;

            // hold-trigger-on-release;
        };
    };

    macros {
        uumllower: uumllower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_2 &kt LEFT_ALT>;
            label = "UUMLLOWER";
        };

        uumlupper: uumlupper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT &kp RIGHT_SHIFT &kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0 &kt LEFT_ALT>;

            label = "UUMLUPPER";
        };

        aumllower: aumllower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_8 &kt LEFT_ALT>;
            label = "AUMLLOWER";
        };

        aumlupper: aumlupper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT &kp RIGHT_SHIFT &kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_6 &kt LEFT_ALT>;

            label = "AUMLUPPER";
        };

        oumllower: oumllower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_6 &kt LEFT_ALT>;
            label = "OUMLLOWER";
        };

        oumlupper: oumlupper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT &kp RIGHT_SHIFT &kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_4 &kt LEFT_ALT>;

            label = "OUMLUPPER";
        };

        eszett: eszett {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kt LEFT_ALT>;
            label = "ESZETT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE     &kp NUMBER_1      &kp NUMBER_2      &kp N3                    &kp N4                &kp N5    &kp UP_ARROW     &kp NUMBER_6  &kp N7                 &kp N8                     &kp N9             &kp N0                &kp BACKSPACE
&kp CAPSLOCK  &kp Q             &kp W             &kp E                     &kp R                 &kp T     &kp DOWN_ARROW   &kp Y         &kp U                  &kp I                      &kp O              &kp P                 &kp BSLH
&kp TAB       &hm_l LEFT_GUI A  &hm_l LEFT_ALT S  &hm_shift_l LEFT_SHIFT D  &hm_l LEFT_CONTROL F  &kp G     &kp LEFT_ARROW   &kp H         &hm_r RIGHT_CONTROL J  &hm_shift_r RIGHT_SHIFT K  &hm_r RIGHT_ALT L  &hm_r RIGHT_GUI SEMI  &kp APOS
&kp ESCAPE    &kp Z             &kp X             &kp C                     &kp V                 &kp B     &kp RIGHT_ARROW  &kp N         &kp M                  &kp COMMA                  &kp DOT            &kp FSLH              &kp DELETE
&kp C_MUTE    &kp RIGHT_ALT     &kp HOME          &kp END                   &kp SPACE             &mo 1     &kp ENTER        &mo 2         &kp SPACE              &kp ENTER                  &kp MINUS          &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F1      &kp F2           &kp F3          &kp F4           &kp F5           &kp F6             &kp F6  &kp F7                 &kp F8             &kp F9           &kp F10          &kp F11          &kp F12
&trans      &kp GRAVE        &kp F6          &kp F6           &kp F6           &kp F6             &kp F6  &kp PG_UP              &kp KP_NUMBER_7    &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp F11          &uuml
&trans      &kp TILDE        &eszett         &kp HOME         &kp END          &kp F6             &kp F6  &kp LEFT_PARENTHESIS   &kp KP_NUMBER_4    &kp KP_NUMBER_5  &kp KP_NUMBER_6  &ouml            &auml
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_TOG_BAT_LEFT  &rgb_ug RGB_TOG_BAT_RIGHT  &rgb_ug RGB_SPI    &kp F6  &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_1    &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp F12          &kp DELETE
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &kp F6  &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp LEFT_BRACE   &kp KP_NUMBER_0  &kp RIGHT_BRACE
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&kp TILDE  &trans  &trans          &trans          &trans           &trans    &kp F6  &kp F6  &kp F7    &kp F8   &kp F9   &kp F10    &trans
&trans     &trans  &trans          &kp UP_ARROW    &trans           &trans    &kp F6  &trans  &trans    &kp F11  &kp F12  &kp UNDER  &kp PLUS
&trans     &bat_text  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &kp F6  &trans  &kp HOME  &trans   &kp END  &kp LBRC   &kp RBRC
&trans     &trans  &trans          &trans          &trans           &trans    &kp F6  &trans  &trans    &trans   &trans   &trans     &trans
&bat_text     &trans  &trans          &trans          &trans           &trans    &kp F6  &trans  &trans    &trans   &trans   &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
